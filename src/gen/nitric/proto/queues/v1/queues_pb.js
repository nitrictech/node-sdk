// source: nitric/proto/queues/v1/queues.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.nitric.proto.queues.v1.FailedSendRequest', null, global);
goog.exportSymbol('proto.nitric.proto.queues.v1.QueueCompleteRequest', null, global);
goog.exportSymbol('proto.nitric.proto.queues.v1.QueueCompleteResponse', null, global);
goog.exportSymbol('proto.nitric.proto.queues.v1.QueueReceiveRequest', null, global);
goog.exportSymbol('proto.nitric.proto.queues.v1.QueueReceiveResponse', null, global);
goog.exportSymbol('proto.nitric.proto.queues.v1.QueueSendRequest', null, global);
goog.exportSymbol('proto.nitric.proto.queues.v1.QueueSendRequestBatch', null, global);
goog.exportSymbol('proto.nitric.proto.queues.v1.QueueSendResponse', null, global);
goog.exportSymbol('proto.nitric.proto.queues.v1.ReceivedTask', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nitric.proto.queues.v1.QueueSendRequestBatch.repeatedFields_, null);
};
goog.inherits(proto.nitric.proto.queues.v1.QueueSendRequestBatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nitric.proto.queues.v1.QueueSendRequestBatch.displayName = 'proto.nitric.proto.queues.v1.QueueSendRequestBatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nitric.proto.queues.v1.QueueSendResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nitric.proto.queues.v1.QueueSendResponse.repeatedFields_, null);
};
goog.inherits(proto.nitric.proto.queues.v1.QueueSendResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nitric.proto.queues.v1.QueueSendResponse.displayName = 'proto.nitric.proto.queues.v1.QueueSendResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nitric.proto.queues.v1.QueueReceiveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nitric.proto.queues.v1.QueueReceiveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nitric.proto.queues.v1.QueueReceiveRequest.displayName = 'proto.nitric.proto.queues.v1.QueueReceiveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nitric.proto.queues.v1.QueueReceiveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nitric.proto.queues.v1.QueueReceiveResponse.repeatedFields_, null);
};
goog.inherits(proto.nitric.proto.queues.v1.QueueReceiveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nitric.proto.queues.v1.QueueReceiveResponse.displayName = 'proto.nitric.proto.queues.v1.QueueReceiveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nitric.proto.queues.v1.QueueCompleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nitric.proto.queues.v1.QueueCompleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nitric.proto.queues.v1.QueueCompleteRequest.displayName = 'proto.nitric.proto.queues.v1.QueueCompleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nitric.proto.queues.v1.QueueCompleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nitric.proto.queues.v1.QueueCompleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nitric.proto.queues.v1.QueueCompleteResponse.displayName = 'proto.nitric.proto.queues.v1.QueueCompleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nitric.proto.queues.v1.QueueSendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nitric.proto.queues.v1.QueueSendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nitric.proto.queues.v1.QueueSendRequest.displayName = 'proto.nitric.proto.queues.v1.QueueSendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nitric.proto.queues.v1.ReceivedTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nitric.proto.queues.v1.ReceivedTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nitric.proto.queues.v1.ReceivedTask.displayName = 'proto.nitric.proto.queues.v1.ReceivedTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nitric.proto.queues.v1.FailedSendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nitric.proto.queues.v1.FailedSendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nitric.proto.queues.v1.FailedSendRequest.displayName = 'proto.nitric.proto.queues.v1.FailedSendRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch.prototype.toObject = function(opt_includeInstance) {
  return proto.nitric.proto.queues.v1.QueueSendRequestBatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nitric.proto.queues.v1.QueueSendRequestBatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    queueName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestsList: jspb.Message.toObjectList(msg.getRequestsList(),
    proto.nitric.proto.queues.v1.QueueSendRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nitric.proto.queues.v1.QueueSendRequestBatch}
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nitric.proto.queues.v1.QueueSendRequestBatch;
  return proto.nitric.proto.queues.v1.QueueSendRequestBatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nitric.proto.queues.v1.QueueSendRequestBatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nitric.proto.queues.v1.QueueSendRequestBatch}
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    case 2:
      var value = new proto.nitric.proto.queues.v1.QueueSendRequest;
      reader.readMessage(value,proto.nitric.proto.queues.v1.QueueSendRequest.deserializeBinaryFromReader);
      msg.addRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nitric.proto.queues.v1.QueueSendRequestBatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nitric.proto.queues.v1.QueueSendRequestBatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.nitric.proto.queues.v1.QueueSendRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string queue_name = 1;
 * @return {string}
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nitric.proto.queues.v1.QueueSendRequestBatch} returns this
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated QueueSendRequest requests = 2;
 * @return {!Array<!proto.nitric.proto.queues.v1.QueueSendRequest>}
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch.prototype.getRequestsList = function() {
  return /** @type{!Array<!proto.nitric.proto.queues.v1.QueueSendRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nitric.proto.queues.v1.QueueSendRequest, 2));
};


/**
 * @param {!Array<!proto.nitric.proto.queues.v1.QueueSendRequest>} value
 * @return {!proto.nitric.proto.queues.v1.QueueSendRequestBatch} returns this
*/
proto.nitric.proto.queues.v1.QueueSendRequestBatch.prototype.setRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.nitric.proto.queues.v1.QueueSendRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nitric.proto.queues.v1.QueueSendRequest}
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch.prototype.addRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.nitric.proto.queues.v1.QueueSendRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nitric.proto.queues.v1.QueueSendRequestBatch} returns this
 */
proto.nitric.proto.queues.v1.QueueSendRequestBatch.prototype.clearRequestsList = function() {
  return this.setRequestsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nitric.proto.queues.v1.QueueSendResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nitric.proto.queues.v1.QueueSendResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nitric.proto.queues.v1.QueueSendResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nitric.proto.queues.v1.QueueSendResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueSendResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    failedRequestsList: jspb.Message.toObjectList(msg.getFailedRequestsList(),
    proto.nitric.proto.queues.v1.FailedSendRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nitric.proto.queues.v1.QueueSendResponse}
 */
proto.nitric.proto.queues.v1.QueueSendResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nitric.proto.queues.v1.QueueSendResponse;
  return proto.nitric.proto.queues.v1.QueueSendResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nitric.proto.queues.v1.QueueSendResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nitric.proto.queues.v1.QueueSendResponse}
 */
proto.nitric.proto.queues.v1.QueueSendResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nitric.proto.queues.v1.FailedSendRequest;
      reader.readMessage(value,proto.nitric.proto.queues.v1.FailedSendRequest.deserializeBinaryFromReader);
      msg.addFailedRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nitric.proto.queues.v1.QueueSendResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nitric.proto.queues.v1.QueueSendResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nitric.proto.queues.v1.QueueSendResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueSendResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailedRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nitric.proto.queues.v1.FailedSendRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FailedSendRequest failed_requests = 1;
 * @return {!Array<!proto.nitric.proto.queues.v1.FailedSendRequest>}
 */
proto.nitric.proto.queues.v1.QueueSendResponse.prototype.getFailedRequestsList = function() {
  return /** @type{!Array<!proto.nitric.proto.queues.v1.FailedSendRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nitric.proto.queues.v1.FailedSendRequest, 1));
};


/**
 * @param {!Array<!proto.nitric.proto.queues.v1.FailedSendRequest>} value
 * @return {!proto.nitric.proto.queues.v1.QueueSendResponse} returns this
*/
proto.nitric.proto.queues.v1.QueueSendResponse.prototype.setFailedRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nitric.proto.queues.v1.FailedSendRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nitric.proto.queues.v1.FailedSendRequest}
 */
proto.nitric.proto.queues.v1.QueueSendResponse.prototype.addFailedRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nitric.proto.queues.v1.FailedSendRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nitric.proto.queues.v1.QueueSendResponse} returns this
 */
proto.nitric.proto.queues.v1.QueueSendResponse.prototype.clearFailedRequestsList = function() {
  return this.setFailedRequestsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nitric.proto.queues.v1.QueueReceiveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nitric.proto.queues.v1.QueueReceiveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nitric.proto.queues.v1.QueueReceiveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueReceiveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queueName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    depth: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nitric.proto.queues.v1.QueueReceiveRequest}
 */
proto.nitric.proto.queues.v1.QueueReceiveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nitric.proto.queues.v1.QueueReceiveRequest;
  return proto.nitric.proto.queues.v1.QueueReceiveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nitric.proto.queues.v1.QueueReceiveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nitric.proto.queues.v1.QueueReceiveRequest}
 */
proto.nitric.proto.queues.v1.QueueReceiveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nitric.proto.queues.v1.QueueReceiveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nitric.proto.queues.v1.QueueReceiveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nitric.proto.queues.v1.QueueReceiveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueReceiveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDepth();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string queue_name = 1;
 * @return {string}
 */
proto.nitric.proto.queues.v1.QueueReceiveRequest.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nitric.proto.queues.v1.QueueReceiveRequest} returns this
 */
proto.nitric.proto.queues.v1.QueueReceiveRequest.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 depth = 2;
 * @return {number}
 */
proto.nitric.proto.queues.v1.QueueReceiveRequest.prototype.getDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.nitric.proto.queues.v1.QueueReceiveRequest} returns this
 */
proto.nitric.proto.queues.v1.QueueReceiveRequest.prototype.setDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nitric.proto.queues.v1.QueueReceiveResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nitric.proto.queues.v1.QueueReceiveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nitric.proto.queues.v1.QueueReceiveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nitric.proto.queues.v1.QueueReceiveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueReceiveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tasksList: jspb.Message.toObjectList(msg.getTasksList(),
    proto.nitric.proto.queues.v1.ReceivedTask.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nitric.proto.queues.v1.QueueReceiveResponse}
 */
proto.nitric.proto.queues.v1.QueueReceiveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nitric.proto.queues.v1.QueueReceiveResponse;
  return proto.nitric.proto.queues.v1.QueueReceiveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nitric.proto.queues.v1.QueueReceiveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nitric.proto.queues.v1.QueueReceiveResponse}
 */
proto.nitric.proto.queues.v1.QueueReceiveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nitric.proto.queues.v1.ReceivedTask;
      reader.readMessage(value,proto.nitric.proto.queues.v1.ReceivedTask.deserializeBinaryFromReader);
      msg.addTasks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nitric.proto.queues.v1.QueueReceiveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nitric.proto.queues.v1.QueueReceiveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nitric.proto.queues.v1.QueueReceiveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueReceiveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTasksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nitric.proto.queues.v1.ReceivedTask.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ReceivedTask tasks = 1;
 * @return {!Array<!proto.nitric.proto.queues.v1.ReceivedTask>}
 */
proto.nitric.proto.queues.v1.QueueReceiveResponse.prototype.getTasksList = function() {
  return /** @type{!Array<!proto.nitric.proto.queues.v1.ReceivedTask>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nitric.proto.queues.v1.ReceivedTask, 1));
};


/**
 * @param {!Array<!proto.nitric.proto.queues.v1.ReceivedTask>} value
 * @return {!proto.nitric.proto.queues.v1.QueueReceiveResponse} returns this
*/
proto.nitric.proto.queues.v1.QueueReceiveResponse.prototype.setTasksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nitric.proto.queues.v1.ReceivedTask=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nitric.proto.queues.v1.ReceivedTask}
 */
proto.nitric.proto.queues.v1.QueueReceiveResponse.prototype.addTasks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nitric.proto.queues.v1.ReceivedTask, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nitric.proto.queues.v1.QueueReceiveResponse} returns this
 */
proto.nitric.proto.queues.v1.QueueReceiveResponse.prototype.clearTasksList = function() {
  return this.setTasksList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nitric.proto.queues.v1.QueueCompleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nitric.proto.queues.v1.QueueCompleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nitric.proto.queues.v1.QueueCompleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueCompleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queueName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    leaseId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nitric.proto.queues.v1.QueueCompleteRequest}
 */
proto.nitric.proto.queues.v1.QueueCompleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nitric.proto.queues.v1.QueueCompleteRequest;
  return proto.nitric.proto.queues.v1.QueueCompleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nitric.proto.queues.v1.QueueCompleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nitric.proto.queues.v1.QueueCompleteRequest}
 */
proto.nitric.proto.queues.v1.QueueCompleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLeaseId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nitric.proto.queues.v1.QueueCompleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nitric.proto.queues.v1.QueueCompleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nitric.proto.queues.v1.QueueCompleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueCompleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLeaseId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string queue_name = 1;
 * @return {string}
 */
proto.nitric.proto.queues.v1.QueueCompleteRequest.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nitric.proto.queues.v1.QueueCompleteRequest} returns this
 */
proto.nitric.proto.queues.v1.QueueCompleteRequest.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string lease_id = 2;
 * @return {string}
 */
proto.nitric.proto.queues.v1.QueueCompleteRequest.prototype.getLeaseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nitric.proto.queues.v1.QueueCompleteRequest} returns this
 */
proto.nitric.proto.queues.v1.QueueCompleteRequest.prototype.setLeaseId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nitric.proto.queues.v1.QueueCompleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nitric.proto.queues.v1.QueueCompleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nitric.proto.queues.v1.QueueCompleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueCompleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nitric.proto.queues.v1.QueueCompleteResponse}
 */
proto.nitric.proto.queues.v1.QueueCompleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nitric.proto.queues.v1.QueueCompleteResponse;
  return proto.nitric.proto.queues.v1.QueueCompleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nitric.proto.queues.v1.QueueCompleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nitric.proto.queues.v1.QueueCompleteResponse}
 */
proto.nitric.proto.queues.v1.QueueCompleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nitric.proto.queues.v1.QueueCompleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nitric.proto.queues.v1.QueueCompleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nitric.proto.queues.v1.QueueCompleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueCompleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nitric.proto.queues.v1.QueueSendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nitric.proto.queues.v1.QueueSendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nitric.proto.queues.v1.QueueSendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueSendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nitric.proto.queues.v1.QueueSendRequest}
 */
proto.nitric.proto.queues.v1.QueueSendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nitric.proto.queues.v1.QueueSendRequest;
  return proto.nitric.proto.queues.v1.QueueSendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nitric.proto.queues.v1.QueueSendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nitric.proto.queues.v1.QueueSendRequest}
 */
proto.nitric.proto.queues.v1.QueueSendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nitric.proto.queues.v1.QueueSendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nitric.proto.queues.v1.QueueSendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nitric.proto.queues.v1.QueueSendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.QueueSendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct payload = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.nitric.proto.queues.v1.QueueSendRequest.prototype.getPayload = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.nitric.proto.queues.v1.QueueSendRequest} returns this
*/
proto.nitric.proto.queues.v1.QueueSendRequest.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nitric.proto.queues.v1.QueueSendRequest} returns this
 */
proto.nitric.proto.queues.v1.QueueSendRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nitric.proto.queues.v1.QueueSendRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nitric.proto.queues.v1.ReceivedTask.prototype.toObject = function(opt_includeInstance) {
  return proto.nitric.proto.queues.v1.ReceivedTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nitric.proto.queues.v1.ReceivedTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.ReceivedTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    leaseId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    payload: (f = msg.getPayload()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nitric.proto.queues.v1.ReceivedTask}
 */
proto.nitric.proto.queues.v1.ReceivedTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nitric.proto.queues.v1.ReceivedTask;
  return proto.nitric.proto.queues.v1.ReceivedTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nitric.proto.queues.v1.ReceivedTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nitric.proto.queues.v1.ReceivedTask}
 */
proto.nitric.proto.queues.v1.ReceivedTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLeaseId(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nitric.proto.queues.v1.ReceivedTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nitric.proto.queues.v1.ReceivedTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nitric.proto.queues.v1.ReceivedTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.ReceivedTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeaseId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string lease_id = 1;
 * @return {string}
 */
proto.nitric.proto.queues.v1.ReceivedTask.prototype.getLeaseId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nitric.proto.queues.v1.ReceivedTask} returns this
 */
proto.nitric.proto.queues.v1.ReceivedTask.prototype.setLeaseId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct payload = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.nitric.proto.queues.v1.ReceivedTask.prototype.getPayload = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.nitric.proto.queues.v1.ReceivedTask} returns this
*/
proto.nitric.proto.queues.v1.ReceivedTask.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nitric.proto.queues.v1.ReceivedTask} returns this
 */
proto.nitric.proto.queues.v1.ReceivedTask.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nitric.proto.queues.v1.ReceivedTask.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nitric.proto.queues.v1.FailedSendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nitric.proto.queues.v1.FailedSendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nitric.proto.queues.v1.FailedSendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.FailedSendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.nitric.proto.queues.v1.QueueSendRequest.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nitric.proto.queues.v1.FailedSendRequest}
 */
proto.nitric.proto.queues.v1.FailedSendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nitric.proto.queues.v1.FailedSendRequest;
  return proto.nitric.proto.queues.v1.FailedSendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nitric.proto.queues.v1.FailedSendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nitric.proto.queues.v1.FailedSendRequest}
 */
proto.nitric.proto.queues.v1.FailedSendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nitric.proto.queues.v1.QueueSendRequest;
      reader.readMessage(value,proto.nitric.proto.queues.v1.QueueSendRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nitric.proto.queues.v1.FailedSendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nitric.proto.queues.v1.FailedSendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nitric.proto.queues.v1.FailedSendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nitric.proto.queues.v1.FailedSendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nitric.proto.queues.v1.QueueSendRequest.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional QueueSendRequest request = 1;
 * @return {?proto.nitric.proto.queues.v1.QueueSendRequest}
 */
proto.nitric.proto.queues.v1.FailedSendRequest.prototype.getRequest = function() {
  return /** @type{?proto.nitric.proto.queues.v1.QueueSendRequest} */ (
    jspb.Message.getWrapperField(this, proto.nitric.proto.queues.v1.QueueSendRequest, 1));
};


/**
 * @param {?proto.nitric.proto.queues.v1.QueueSendRequest|undefined} value
 * @return {!proto.nitric.proto.queues.v1.FailedSendRequest} returns this
*/
proto.nitric.proto.queues.v1.FailedSendRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nitric.proto.queues.v1.FailedSendRequest} returns this
 */
proto.nitric.proto.queues.v1.FailedSendRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nitric.proto.queues.v1.FailedSendRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.nitric.proto.queues.v1.FailedSendRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nitric.proto.queues.v1.FailedSendRequest} returns this
 */
proto.nitric.proto.queues.v1.FailedSendRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.nitric.proto.queues.v1);
